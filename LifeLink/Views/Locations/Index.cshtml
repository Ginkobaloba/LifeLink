@model IEnumerable<LifeLink.Models.LocationViewModel>

@{
    ViewBag.Title = "LifeLink - Welcome";
}

<h2>Where would you like to start?</h2>
<div class="col-md-12">
    <span style="inline">
        <a class="btn btn-danger" href='@Url.Action("Create", "Questionnaires")'><span class="glyphicon glyphicon-question-sign" aria-hidden="true"></span>&nbsp; Required Questionnaire</a>
        <a class="btn btn-danger" href="@Url.Action("Index", "Manage")"><span class="glyphicon glyphicon-user" aria-hidden="true"></span>&nbsp; Manage Account</a>
    </span>
</div>
<h1 class="register-title">Select Location</h1>
<form class="register">
    <div class="register-switch">
        <input type="radio" name="sex" value="H" id="sex_f" class="register-switch-input" checked>
        <label for="sex_f" class="register-switch-label">Home</label>
        <input type="radio" name="sex" value="C" id="sex_m" class="register-switch-input">
        <label for="sex_m" class="register-switch-label">Current</label>
    </div>
    <input type="button" value="Select closest" class="register-button" onclick="HomeOrCurrent(document.getElementById('sex_f').checked)">
    <input type="button" value="Make Appointment" class="register-button" onclick="myFunction()">
</form>

<div id="map"></div>
    <script>
        function initMap (){
            navigator.geolocation.getCurrentPosition(currentPosition,HomePosition);
        }
        function currentPosition(position) {
            var mapDiv = document.getElementById('map');
            var map = new google.maps.Map(mapDiv, {
                center: {lat: position.coords.latitude , lng: position.coords.longitude},
                zoom: 12
            });
                @foreach (var item1 in Model) {
                <text>
                    var marker = new google.maps.Marker({
                        position: { lat: @item1.LocationLat , lng: @item1.LocationLong},
                        map: map,
                        title: '@item1.Name'
                    });</text> }
            }

        
        function HomePosition(){
            @foreach (var item in Model) {
    <text>
            var mapDiv = document.getElementById('map');
            var map = new google.maps.Map(mapDiv, {
                center: { lat: @item.personlat, lng: @item.personlng},
                map: map,
                title: '@item.Name'
            });</text>
        foreach (var item1 in Model) {
        <text>
            var marker = new google.maps.Marker({
            position: { lat: @item1.LocationLat , lng: @item1.LocationLong},
            map: map,
            title: '@item1.Name'
                        });</text> }
                }
        }

        function HomeOrCurrent(value)
        {
            if (value == true )
            {
                var api = 'https://itunes.apple.com/search?'
                var apiRequest = api + encoded
                var toBeAppened = '<script src=' + apiRequest +'><\/script>'
                jQuery('body').append(toBeAppened);
            }
            else 
            {
            navigator.geolocation.getCurrentPosition(GetCurrentRoute,GetHomeRoute);
            }
        }

        function GetHomeRoute()
        {
            var hello = "hello";
        }

        function GetCurrentRoute()
        {
           var hello = "hello";
        }

    </script>

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDPhuvNN439sVvdr5Fpg4maQjMCz-FtAZM&callback=initMap">
    </script>
